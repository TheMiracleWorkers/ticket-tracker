{"version":3,"sources":["components/SideMenu.tsx","components/SearchInput.tsx","domainObjects/Ticket.tsx","domainObjects/inMemoryJWTManager.tsx","transportation/TransportLayer.tsx","domainObjects/Project.ts","domainObjects/User.tsx","transportation/TransportUsers.tsx","components/AddTicketForm.tsx","pages/AddTicket.tsx","components/ProjectForm.tsx","components/TopHeader.tsx","pages/Dashboard.tsx","components/UseTable.tsx","components/viewTicket/TicketHeader.tsx","components/viewTicket/TicketBody.tsx","components/viewTicket/ViewTicket.tsx","components/EditTicketForm.tsx","pages/EditTicket.tsx","pages/Tickets.tsx","domainObjects/Role.tsx","transportation/TransportLayerRoles.tsx","components/EditUserForm.tsx","pages/EditUser.tsx","pages/Users.tsx","pages/Settings.tsx","pages/Login.tsx","pages/Register.tsx","components/PrivateRoute.tsx","pages/Projects.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["openedSidebar","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","backgroundColor","border","closedSidebar","leavingScreen","spacing","Drawer","styled","MuiDrawer","shouldForwardProp","prop","open","whiteSpace","boxSizing","SideMenu","React","setOpen","menu","Home","FormatListBulleted","AccountTree","PersonOutline","Settings","id","variant","List","Object","keys","map","key","ListItem","button","role","component","Link","to","ListItemIcon","ListItemText","primary","Divider","onClick","document","getElementById","classList","toggle","ChevronLeft","ChevronRight","Search","position","borderRadius","shape","alpha","palette","common","white","marginLeft","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","right","display","alignItems","justifyContent","marginRi","StyledInputBase","InputBase","color","paddingLeft","searchInput","placeholder","name","label","value","onChange","style","marginRight","Ticket","json","title","description","status","dueDate","createdDate","updatedDate","priority","project","project_name","assignedUserId","assignedUserName","this","due_date","Date","created_at","updated_at","assigned_user","assigned_username","toISOString","toUTCString","inMemoryJWTManager","inMemoryJWT","getToken","setToken","token","deleteToken","TransportLayer","apiUrl","process","axiosInstance","axios","baseURL","headers","Authorization","localStorage","getItem","request","method","url","ticket","data","toJSON","Project","User","username","email","groups","last_login","date_joined","TransportUsers","validationSchema","yup","min","required","AddTicketForm","props","useState","projects","setProjects","users","setUsers","transportLayer","transportUser","history","useHistory","useEffect","getAllProjectPromise","then","response","allProjects","responseElement","console","log","getAllUsersPromise","allUsers","formik","useFormik","initialValues","onSubmit","values","newTicket","postTicket","catch","err","res","push","onClose","handleSubmit","Grid","container","item","xs","sm","TextField","fullWidth","handleChange","error","touched","Boolean","errors","helperText","select","event","setFieldValue","target","onBlur","handleBlur","option","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","inputFormat","minDate","renderInput","params","user","multiline","rows","Stack","direction","Button","type","AddTickets","Modal","modalIsOpen","Box","sx","top","left","transform","bgcolor","boxShadow","p","md","columns","Typography","gutterBottom","noWrap","ProjectForm","closeForm","resetForm","updateProjectPromise","updateProject","newProject","postProject","addProject","TopHeader","buttonText","modal","search","location","useLocation","setModalIsOpen","pathname","onModalClose","AppBar","className","Toolbar","size","SearchInput","searchText","e","setSearchText","logged_in","handle_logout","cursor","listStyle","Logout","AccountCircle","Dashboard","useStyles","makeStyles","table","marginTop","fontWeight","paginationContainer","flexDirection","fontSize","flexWrap","flex","paginationSelect","paginationSection","paginationText","fontFamily","margin","useTable","records","headCells","filterFn","classes","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","descendingComparator","a","b","TblContainer","Table","children","TblHead","TableHead","TableRow","headCell","TableCell","TableSortLabel","active","cellId","TblPagination","parseInt","Pagination","count","Math","ceil","fn","length","siblingCount","boundaryCount","newPage","showFirstButton","showLastButton","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","resetPage","TicketHeader","responsiveFontTheme","responsiveFontSizes","createTheme","Fragment","ThemeProvider","alignContent","IconButton","onEdit","toDateString","TicketBody","boxStyle","overflow","ViewTicket","onBackdropClick","EditTicketForm","updateTicket","updateTicketPromise","disabled","EditTicket","undefined","Tickets","tickets","setTickets","loading","setLoading","items","setFilterFn","ticketToUpdate","setTicketToUpdate","modalOpen","setModalOpen","modalEditTicketOpen","setModalEditTicketOpen","fetchAllTicket","getAllTicketsPromise","allTickets","text","searchTextInput","filter","x","toLowerCase","includes","moment","format","TableBody","ticketId","getTicketByIdPromise","handleClickEvent","substring","isValid","colSpan","CircularProgress","Role","TransportLayerRoles","EditUserForm","roles","setRoles","transportRole","updateUser","updateUserPromise","getAllRolesPromise","allRoles","InputLabel","Select","labelId","multiple","renderValue","selected","gap","find","o","Chip","EditUser","Users","modalEditUserOpen","setModalEditUserOpen","userToUpdate","setUserToUpdate","fetchAllUsers","userId","getUserByIdPromise","toString","split","Login","showPassword","password","setValues","loginUser","handle_login","FormControl","htmlFor","Input","endAdornment","InputAdornment","VisibilityOff","Visibility","Register","registerUser","handle_register","inputProps","minLength","PrivateRoute","isLoggedIn","rest","render","routeProps","state","from","Projects","editProject","setEditProject","fetchAllProjects","window","addEventListener","getAttribute","confirm","deleteProject","r","refreshInterval","createBrowserHistory","App","setUser","show_message","message","setMessage","clearInterval","startInterval","setInterval","refresh_token","fetch","body","JSON","stringify","listen","Alert","severity","exact","path","non_field_errors","ok","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","URL","href","origin","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.fdb04c24.chunk.js","sourcesContent":["import * as React from 'react';\n\nimport {\n    AccountTree,\n    ChevronLeft,\n    ChevronRight,\n    FormatListBulleted,\n    Home,\n    PersonOutline,\n    Settings\n} from '@mui/icons-material';\nimport {\n    CSSObject,\n    Divider,\n    Drawer as MuiDrawer,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    styled,\n    Theme\n} from '@mui/material';\nimport {Link} from \"react-router-dom\";\n\n// Open sidebar\nconst openedSidebar = (theme: Theme): CSSObject => ({\n    width: 250,\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflowX: 'hidden',\n    backgroundColor: '#F6F4F5',\n    border: 0,\n});\n\n// Close sidebar\nconst closedSidebar = (theme: Theme): CSSObject => ({\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(7)} + 1px)`,\n    backgroundColor: '#F6F4F5',\n    border: 0,\n});\n\n// Trigger close and open sidebar style changes\nconst Drawer = styled(MuiDrawer, {shouldForwardProp: (prop) => prop !== 'open'})(\n    ({theme, open}) => ({\n        whiteSpace: 'nowrap',\n        boxSizing: 'border-box',\n        ...(open && {\n            '#side-menu & .MuiDrawer-paper': openedSidebar(theme),\n        }),\n        ...(!open && {\n            '#side-menu & .MuiDrawer-paper': closedSidebar(theme),\n        }),\n    }),\n);\n\nexport default function SideMenu() {\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n        (document.getElementById(\"content\") as HTMLFormElement).classList.toggle(\"open\");\n        (document.getElementById(\"top-header\") as HTMLFormElement).classList.toggle(\"open\");\n\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n        (document.getElementById(\"content\") as HTMLFormElement).classList.toggle(\"open\");\n        (document.getElementById(\"top-header\") as HTMLFormElement).classList.toggle(\"open\");\n    };\n\n    // map of menu items\n    const menu: { [index: string]: any } = {\n        0: {\n            \"text\": \"Home\",\n            \"element\": <Home/>,\n            \"to\": \"/\",\n        },\n        1: {\n            \"text\": \"Tickets\",\n            \"element\": <FormatListBulleted/>,\n            \"to\": \"/tickets\",\n        },\n        2: {\n            \"text\": \"Projects\",\n            \"element\": <AccountTree/>,\n            \"to\": \"/projects\",\n        },\n        3: {\n            \"text\": \"Users\",\n            \"element\": <PersonOutline/>,\n            \"to\": \"/users\",\n        },\n        4: {\n            \"text\": \"Settings\",\n            \"element\": <Settings/>,\n            \"to\": \"/settings\",\n        }\n\n    }\n\n    return (\n        <div id=\"side-menu\">\n            <Drawer variant=\"permanent\" open={open}>\n                <List>\n                    {Object.keys(menu).map((key) => (\n                        <ListItem button role=\"button\" component={Link} to={menu[key]['to']} key={key}>\n                            <ListItemIcon>\n                                {menu[key]['element']}\n                            </ListItemIcon>\n                            <ListItemText primary={menu[key]['text']}/>\n                        </ListItem>\n                    ))}\n                </List>\n                <Divider/>\n                {!open ? (\n                    <ListItem button onClick={handleDrawerOpen}>\n                        <ChevronRight/>\n                    </ListItem>\n                ) : (\n                    <ListItem button onClick={handleDrawerClose}>\n                        <ChevronLeft/>\n                    </ListItem>\n                )}\n            </Drawer>\n        </div>\n    );\n}","import React from \"react\"\nimport {InputBase, InputBaseProps} from \"@mui/material\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport {alpha, styled} from '@mui/material/styles';\n\n\nconst Search = styled('div')(({theme}) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    border: '1px solid #000',\n    [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(0),\n        width: 'auto',\n    },\n}));\n\nconst SearchIconWrapper = styled('div')(({theme}) => ({\n    padding: theme.spacing(0),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    right: 10,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRi: 0,\n}));\n\nconst StyledInputBase = styled(InputBase)(({theme}) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 3),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(1)})`,\n        width: '100%',\n    },\n}));\n\ninterface Props extends InputBaseProps {\n    placeholder: string;\n    label: string;\n    name: string;\n    value: string;\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst searchInput: React.FC<Props> = ({\n                                          placeholder,\n                                          label,\n                                          name,\n                                          value,\n                                          onChange,\n\n                                      }) => {\n\n    return (\n        <Search style={{marginRight: 16}}>\n            <SearchIconWrapper>\n                <SearchIcon/>\n            </SearchIconWrapper>\n            <StyledInputBase\n                placeholder={placeholder}\n                name={name}\n                value={value}\n                onChange={onChange}\n            />\n        </Search>)\n}\n\nexport default searchInput;","export interface TicketInterface {\n    id: number | null;\n    title: string;\n    description: string;\n    status: string;\n    dueDate: Date | null;\n    createdDate: Date | null;\n    updatedDate: Date | null;\n    priority: number | null;\n    project: number | null;\n    project_name: string;\n    assignedUserId: number | null;\n    assignedUserName: string;\n}\n\nexport default class Ticket implements TicketInterface {\n    id: number;\n    title: string;\n    description: string;\n    status: string;\n    dueDate: Date | null;\n    createdDate: Date | null;\n    updatedDate: Date | null;\n    priority: number | null;\n    project: number | null;\n    project_name: string;\n    assignedUserId: number | null;\n    assignedUserName: string;\n\n    constructor(json: any) {\n        this.id = json.id ? json.id : null;\n        this.title = json.title;\n        this.description = json.description;\n        this.status = json.status ? json.status : 'Open'\n        this.dueDate = json.due_date ? new Date(json.due_date) : null;\n        this.createdDate = json.created_at ? new Date(json.created_at) : null;\n        this.updatedDate = json.updated_at ? new Date(json.updated_at) : null;\n        this.priority = json.priority ? json.priority : null;\n        this.project = json.project ? json.project : null;\n        this.project_name = json.project_name;\n        this.assignedUserId = json.assigned_user ? json.assigned_user : null;\n        this.assignedUserName = json.assigned_username;\n    }\n\n    toJSON() {\n        return {\n            id: this.id ? this.id : '',\n            title: this.title,\n            description: this.description,\n            due_date: this.dueDate ? this.dueDate.toISOString() : null,\n            created_at: this.createdDate?.toUTCString(),\n            updated_at: this.createdDate?.toUTCString(),\n            priority: this.priority,\n            status: this.status,\n            project: this.project,\n            project_name: this.project_name,\n            assigned_user: this.assignedUserId,\n            assigned_username: this.assignedUserName\n        }\n    }\n}","const inMemoryJWTManager = () => {\n    let inMemoryJWT: any = null;\n\n    const getToken = () => inMemoryJWT;\n\n    const setToken = (token: any) => {\n        inMemoryJWT = token;\n        return true;\n    };\n\n    const deleteToken = () => {\n        inMemoryJWT = null;\n        return true;\n    };\n\n    return {\n        getToken,\n        setToken,\n        deleteToken\n    };\n};\n\nexport default inMemoryJWTManager();","import axios from \"axios\";\nimport Ticket from \"../domainObjects/Ticket\";\nimport Project from \"../domainObjects/Project\";\nimport inMemoryJWT from \"../domainObjects/inMemoryJWTManager\";\n\nexport class TransportLayer {\n    apiUrl = process.env.REACT_APP_REST_API;\n    axiosInstance = axios.create({\n        baseURL: this.apiUrl,\n        headers: {\n            Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n    });\n\n    getAllTicketsPromise() {\n        return this.axiosInstance.request({\n            method: \"GET\",\n            url: \"/tickets\",\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        });\n    }\n\n    getTicketByIdPromise(id: number) {\n        return this.axiosInstance.request({\n            method: \"GET\",\n            url: \"/tickets/\" + id,\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        });\n    }\n\n    postTicket(ticket: Ticket) {\n        return this.axiosInstance.request({\n            method: \"POST\",\n            url: \"/tickets/\",\n            data: ticket.toJSON(),\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        })\n    }\n\n    updateTicketPromise(ticket: Ticket) {\n        return this.axiosInstance.request({\n            method: \"PUT\",\n            url: \"/tickets/\" + ticket.id + \"/\",\n            data: ticket.toJSON(),\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        });\n    }\n\n    getAllProjectPromise() {\n        return this.axiosInstance.request({\n            method: \"GET\",\n            url: \"/projects\",\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        });\n    }\n\n    getProjectByIdPromise(id: number) {\n        return this.axiosInstance.request({\n            method: \"GET\",\n            url: \"/projects/\" + id,\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        });\n    }\n\n    postProject(project: Project) {\n        return this.axiosInstance.request({\n            method: \"POST\",\n            url: \"/projects/\",\n            data: project.toJSON(),\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        })\n    }\n\n    updateProjectPromise(project: Project) {\n        return this.axiosInstance.request({\n            method: \"PUT\",\n            url: \"/projects/\" + project.id + \"/\",\n            data: project.toJSON(),\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        });\n    }\n\n    deleteProject(project: Project) {\n        return this.axiosInstance.request({\n            method: \"DELETE\",\n            url: \"/projects/\" + project.id + \"/\",\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        })\n       \n    }\n\n}\n","export interface ProjectInterface {\n    id: number | null;\n    name: string;\n}\n\nexport default class Project implements ProjectInterface {\n    id: number;\n    name: string;\n\n    constructor(json: any) {\n        this.id = json.id ? json.id : null;\n        this.name = json.name;\n    }\n\n    toJSON() {\n        return {\n            id: this.id ? this.id : '',\n            name: this.name,\n        }\n    }\n}","export interface UserInterface {\n    id: number | null;\n    url: string;\n    username: string;\n    email: string;\n    groups: string[];\n    last_login: string | null;\n    date_joined: string | null;\n}\n\nexport default class User implements UserInterface {\n    id: number;\n    url: string;\n    username: string;\n    email: string;\n    groups: string[];\n    last_login: string | null;\n    date_joined: string | null;\n\n    constructor(json: any) {\n        this.id = json.id ? json.id : null;\n        this.url = json.url;\n        this.username = json.username;\n        this.email = json.email;\n        this.groups = json.groups ? json.groups : null;\n        this.last_login = json.last_login ? json.last_login : null;\n        this.date_joined = json.date_joined ? json.date_joined : null;\n    }\n\n    toJSON() {\n        return {\n            id: this.id ? this.id : '',\n            url: this.url,\n            username: this.username,\n            email: this.email,\n            groups: this.groups,\n            last_login: this.last_login,\n            date_joined: this.date_joined,\n        }\n    }\n}","import axios from \"axios\";\nimport User from \"../domainObjects/User\";\nimport inMemoryJWT from \"../domainObjects/inMemoryJWTManager\";\n\nexport class TransportUsers {\n    apiUrl = process.env.REACT_APP_REST_API;\n    axiosInstance = axios.create({\n        baseURL: this.apiUrl,\n        headers: {\n            Authorization: `JWT ${inMemoryJWT.getToken()}`\n        },\n    });\n\n\n    getAllUsersPromise() {\n        return this.axiosInstance.request({\n            method: \"GET\",\n            url: \"/users\",\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        });\n    }\n\n    getUserByIdPromise(id: number) {\n        return this.axiosInstance.request({\n            method: \"GET\",\n            url: \"/users/\" + id,\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        });\n    }\n\n    postUser(User: User) {\n        return this.axiosInstance.request({\n            method: \"POST\",\n            url: \"/users/\",\n            data: User.toJSON(),\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        })\n    }\n\n    updateUserPromise(User: User) {\n        return this.axiosInstance.request({\n            method: \"PUT\",\n            url: \"/users/\" + User.id + \"/\",\n            data: User.toJSON(),\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        });\n    }\n}\n","import * as React from 'react';\nimport {useEffect, useState} from 'react';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport * as yup from \"yup\";\nimport {useFormik} from \"formik\";\nimport Button from \"@mui/material/Button\";\nimport {MenuItem, Stack} from \"@mui/material\";\nimport Ticket from '../domainObjects/Ticket';\nimport {TransportLayer} from '../transportation/TransportLayer';\nimport {useHistory} from \"react-router-dom\";\nimport {DateTimePicker, LocalizationProvider} from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport Project from \"../domainObjects/Project\";\nimport User from '../domainObjects/User';\nimport {TransportUsers} from '../transportation/TransportUsers';\n\nconst validationSchema = yup.object({\n    title: yup\n        .string()\n        .min(10, 'Ticket title should be of minimum 8 characters length')\n        .required('Ticket title is required'),\n    description: yup\n        .string()\n        .required('Ticket description is required'),\n    dueDate: yup\n        .date()\n        .required('dueDate must be a `date` type'),\n});\n\n\nexport default function AddTicketForm(props: {\n    onClose: Function;\n}) {\n    const [projects, setProjects] = useState<Project[]>([]);\n    const [users, setUsers] = useState<User[]>([]);\n    const transportLayer = new TransportLayer();\n    const transportUser = new TransportUsers();\n    const history = useHistory();\n\n    const priorities = [\n        {\n            label: 'LOW',\n            value: 1,\n        },\n        {\n            label: 'MEDIUM',\n            value: 2,\n        },\n        {\n            label: 'HIGH',\n            value: 3,\n        }\n    ];\n\n    function getAllProjects() {\n        transportLayer.getAllProjectPromise().then((response: any) => {\n            const allProjects: Project[] = response.data.map(\n                (responseElement: any) => new Project(responseElement)\n            );\n            setProjects(allProjects);\n            console.log(projects);\n        })\n    }\n\n    function getAllUsers() {\n        transportUser\n            .getAllUsersPromise()\n            .then((response: any) => {\n                const allUsers: User[] = response.data.map(\n                    (responseElement: any) => new User(responseElement)\n                );\n                setUsers(allUsers);\n            })\n    }\n\n    useEffect(() => {\n        getAllProjects();\n    }, []);\n\n    useEffect(() => {\n        getAllUsers();\n    }, []);\n\n    const formik = useFormik({\n        initialValues: {\n            title: '',\n            description: '',\n            dueDate: null,\n            priority: '',\n            project: '',\n            assignedUserId: ''\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            const newTicket = new Ticket({\n                'title': values.title,\n                'description': values.description,\n                'due_date': values.dueDate && new Date(values.dueDate),\n                'priority': values.priority,\n                'project': values.project,\n                'assigned_user': values.assignedUserId,\n            });\n            transportLayer.postTicket(newTicket).catch(err => {\n                // TODO: Show error\n            }).then(res => {\n                history.push('/tickets');\n                props.onClose();\n            });\n        },\n    });\n\n    return (\n        <React.Fragment>\n            <form onSubmit={formik.handleSubmit}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            required\n                            id=\"title\"\n                            name=\"title\"\n                            label=\"Title\"\n                            fullWidth\n                            variant=\"standard\"\n                            value={formik.values.title}\n                            onChange={formik.handleChange}\n                            error={formik.touched.title && Boolean(formik.errors.title)}\n                            helperText={formik.touched.title && formik.errors.title}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            select\n                            required\n                            id=\"project\"\n                            name=\"project\"\n                            label=\"Project\"\n                            fullWidth\n                            variant=\"standard\"\n                            value={formik.values.project}\n                            onChange={event => formik.setFieldValue(\"project\", (event.target.value))}\n                            onBlur={formik.handleBlur}\n                        >\n                            {projects.map((option) => (\n                                <MenuItem key={option.id} value={option.id}>\n                                    {option.name}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={12} sm={3}>\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DateTimePicker\n                                label=\"Due Date\"\n                                value={formik.values.dueDate}\n                                inputFormat=\"dd-MM-yyyy HH:mm\"\n                                onChange={value => formik.setFieldValue(\"dueDate\", value)}\n                                minDate={new Date()}\n                                renderInput={(params) => <TextField\n                                    id=\"due_date\"\n                                    name=\"due_date\"\n                                    label=\"Due Date\"\n                                    fullWidth\n                                    variant=\"standard\"\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    {...params}\n                                />}\n                            />\n                        </LocalizationProvider>\n                    </Grid>\n                    <Grid item xs={12} sm={1}>\n                        <TextField\n                            select\n                            required\n                            id=\"priority\"\n                            name=\"priority\"\n                            label=\"Priority\"\n                            fullWidth\n                            variant=\"standard\"\n                            value={formik.values.priority}\n                            onChange={event => formik.setFieldValue(\"priority\", (event.target.value))}\n                            onBlur={formik.handleBlur}\n                        >\n                            {priorities.map((option) => (\n                                <MenuItem key={option.label} value={option.value}>\n                                    {option.value}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            select\n                            required\n                            id=\"assigned\"\n                            name=\"assigned\"\n                            label=\"Assigned\"\n                            fullWidth\n                            variant=\"standard\"\n                            value={formik.values.assignedUserId}\n                            onChange={event => formik.setFieldValue(\"assignedUserId\", (event.target.value))}\n                            onBlur={formik.handleBlur}\n                        >\n                            {users.map((user) => (\n                                <MenuItem key={user.id} value={user.id}>\n                                    {user.username}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                        <TextField\n                            required\n                            id=\"description\"\n                            name=\"description\"\n                            label=\"Description\"\n                            fullWidth\n                            variant=\"standard\"\n                            multiline\n                            rows={8}\n                            value={formik.values.description}\n                            onChange={formik.handleChange}\n                            error={formik.touched.description && Boolean(formik.errors.description)}\n                            helperText={formik.touched.description && formik.errors.description}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Stack spacing={2} direction=\"row\">\n                            <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n                                Submit\n                            </Button>\n                            <Button color=\"primary\" variant=\"outlined\" onClick={() => props.onClose()}>\n                                Cancel\n                            </Button>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </form>\n        </React.Fragment>\n    );\n}","import * as React from 'react';\nimport {Box, Grid, Modal, Typography} from \"@mui/material\";\nimport AddTicketForm from \"../components/AddTicketForm\";\nimport {SxProps} from \"@mui/system\";\n\nexport default function AddTickets(props: {\n    modalIsOpen: boolean;\n    onClose: Function;\n}) {\n\n    const boxStyle: SxProps = {\n        position: \"relative\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"85%\",\n        height: \"85%\",\n        bgcolor: \"background.paper\",\n        border: \"1px solid #000\",\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <div id=\"add-ticket\">\n            <Modal\n                open={props.modalIsOpen}\n            >\n                <Box sx={boxStyle}>\n                    <Grid\n                        container\n                        spacing={{md: 0}}\n                        columns={{xs: 4, sm: 8, md: 12}}\n                        padding={{md: 0.6}}\n                        justifyContent={\"space-between\"}\n                    >\n                        <Typography variant=\"h4\" gutterBottom noWrap={true}>Add Ticket</Typography>\n                        <Grid item xs={4} sm={8} md={12}>\n                            <AddTicketForm onClose={props.onClose}/>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Modal>\n        </div>\n    )\n}","import * as React from 'react';\nimport {useEffect} from 'react';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport * as yup from \"yup\";\nimport {useFormik} from \"formik\";\nimport Button from \"@mui/material/Button\";\nimport {Box, Modal, Stack} from \"@mui/material\";\nimport {TransportLayer} from '../transportation/TransportLayer';\nimport Project from \"../domainObjects/Project\";\nimport {SxProps} from \"@mui/system\";\n\nconst validationSchema = yup.object({\n    name: yup\n        .string()\n        .min(3, 'Project name should be of minimum 3 characters length')\n        .required('project name is required'),\n});\n\nexport default function ProjectForm(props: {\n    onClose: Function;\n    modalIsOpen: boolean;\n    project?: Project | null;\n}) {\n    const transportLayer = new TransportLayer();\n\n    const boxStyle: SxProps = {\n        position: \"relative\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: 400,\n        bgcolor: \"background.paper\",\n        border: \"1px solid #000\",\n        boxShadow: 24,\n        p: 4,\n    };\n\n    function closeForm() {\n        formik.resetForm();\n        props.onClose();\n    }\n\n    function addProject(values: any) {\n        const newProject = new Project({\n            'name': values.name,\n        });\n        transportLayer.postProject(newProject).catch(err => {\n            // TODO: Show error\n        }).then(res => {\n            closeForm();\n        });\n    }\n\n    function updateProject(project: any, values: any) {\n        project.name = values.name;\n\n        transportLayer.updateProjectPromise(project).catch(err => {\n            // TODO: Show error\n        }).then(res => {\n            closeForm();\n        });\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            name: props.project ? props.project.name : '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            if (props.project) {\n                updateProject(props.project, values);\n            } else {\n                addProject(values);\n            }\n        },\n    });\n\n    useEffect(() => {\n        if (props.project) {\n            formik.setFieldValue('name', props.project?.name);\n        }\n    }, [props.project]);\n\n    return (\n        <React.Fragment>\n            <Modal open={props.modalIsOpen}>\n                <Box sx={boxStyle}>\n                    <form onSubmit={formik.handleSubmit}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={12}>\n                                <TextField\n                                    required\n                                    id=\"name\"\n                                    name=\"name\"\n                                    label=\"Name\"\n                                    fullWidth\n                                    variant=\"standard\"\n                                    value={formik.values.name}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.name && Boolean(formik.errors.name)}\n                                    helperText={formik.touched.name && formik.errors.name}\n                                />\n                            </Grid>\n\n\n                            <Grid item xs={12}>\n                                <Stack spacing={2} direction=\"row\">\n                                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n                                        Submit\n                                    </Button>\n                                    <Button color=\"primary\" variant=\"outlined\" onClick={() => closeForm()}>\n                                        Cancel\n                                    </Button>\n                                </Stack>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Box>\n            </Modal>\n        </React.Fragment>\n    );\n}\n","import * as React from 'react';\n\nimport {AccountCircle, Logout} from '@mui/icons-material';\nimport {AppBar, Button, Toolbar} from '@mui/material';\nimport {Link, useLocation} from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\nimport SearchInput from './SearchInput';\nimport AddTicket from '../pages/AddTicket';\nimport ProjectForm from \"./ProjectForm\";\n\nTopHeader.propTypes = {\n    logged_in: PropTypes.bool.isRequired,\n    handle_logout: PropTypes.func.isRequired,\n    searchText: PropTypes.string,\n    setSearchText: PropTypes.func,\n};\n\ninterface TopHeaderProps {\n    logged_in: boolean;\n    handle_logout: React.MouseEventHandler<HTMLLIElement>;\n    searchText: string;\n    setSearchText: any;\n}\n\nexport default function TopHeader(props: TopHeaderProps) {\n    const location = useLocation();\n    const [modalIsOpen, setModalIsOpen] = React.useState(false);\n\n    let buttonText;\n    let modal;\n    let search\n    switch (location.pathname) {\n        case \"/tickets\":\n            buttonText = \"+ Add ticket\"\n            search = true\n            modal = <AddTicket modalIsOpen={modalIsOpen} onClose={onModalClose}/>\n            break;\n        case \"/projects\":\n            buttonText = \"+ Add project\"\n            search = true\n            modal = <ProjectForm modalIsOpen={modalIsOpen} onClose={onModalClose}/>\n            break;\n        case \"/users\":\n            search = true\n            break;\n        default:\n            buttonText = \"\";\n            break;\n    }\n\n    function onModalClose() {\n        setModalIsOpen(false);\n    }\n\n    return (\n        <div id=\"top-header\">\n            {modal}\n            <AppBar className={'app-bar'}>\n                <Toolbar>\n                    {buttonText ? (\n                        <Button variant=\"outlined\" className={'add-button'}\n                                size=\"medium\" onClick={() => setModalIsOpen(true)}>{buttonText} </Button>\n                    ) : (\"\")}\n                </Toolbar>\n                <Toolbar>\n                    {search ? (\n                        <SearchInput type={'input'} placeholder={\" Search...\"} label={\"search\"} name={\"search\"}\n                                     value={props.searchText}\n                                     onChange={(e) => props.setSearchText(e.target.value)}/>\n                    ) : (\"\")}\n\n                    {props.logged_in ? (\n                        <li onClick={props.handle_logout}\n                            style={{marginRight: 16, cursor: \"pointer\", listStyle: \"none\"}}><Logout/></li>\n                    ) : (\"\")}\n\n                    <Link to={\"/\"}><AccountCircle/></Link>\n                </Toolbar>\n\n            </AppBar>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport {Grid, Typography} from \"@mui/material\";\n\nexport default function Dashboard() {\n    return (\n        <React.Fragment>\n            <Typography variant=\"h1\" gutterBottom>Dashboard</Typography>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <Typography variant=\"body1\">\n                        Welcome to the ticket tickets application. Lorem ipsum dolor sit amet, consectetur adipiscing\n                        elit. Integer consequat velit sem, ultrices cursus augue lacinia a. Quisque consequat ac neque\n                        ut convallis. Sed velit arcu, vestibulum ut lacus vel, fermentum faucibus augue. Vivamus justo\n                        felis, consectetur eu accumsan a, faucibus at diam.\n                    </Typography>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}","import React, {useState} from \"react\";\nimport {Pagination, Table, TableCell, TableHead, TableRow, TableSortLabel} from '@mui/material';\nimport {makeStyles} from \"@mui/styles\";\n\n\nconst useStyles = makeStyles({\n    table: {\n        marginTop: '20px',\n        '& thead th': {\n            fontWeight: '600',\n        },\n        '& tbody td': {\n            fontWeight: '200',\n        },\n        '& tbody tr:hover': {\n            backgroundColor: '#fffbf2',\n            cursor: 'pointer',\n        },\n        \"@media (max-width: 768px)\": {\n            overflowX: 'auto',\n            display: 'block',\n        }\n    },\n    paginationContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        padding: '1em',\n        fontSize: '.75em',\n        \"@media (max-width: 768px)\": {\n            justifyContent: 'center',\n            flexWrap: 'wrap',\n            flex: '0 0 100%',\n        }\n    },\n    paginationSelect: {\n        width: 45,\n        border: 0,\n    },\n    paginationSection: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        \"@media (max-width: 768px)\": {\n            marginTop: '10px',\n        }\n    },\n    paginationText: {\n        fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n        margin: '0.75em',\n        \"@media (max-width: 768px)\": {\n            margin: '0',\n        }\n    },\n})\n\nexport default function useTable(records: any[], headCells: any[], filterFn: { fn: (arg0: any) => any; }) {\n\n\n    const classes = useStyles();\n    const pages = [5, 10, 25];\n    const [page, setPage] = useState(1);\n    const [rowsPerPage, setRowsPerPage] = React.useState(pages[0]);\n    type Order = 'asc' | 'desc';\n    const [order, setOrder] = React.useState<Order>('asc');\n    const [orderBy, setOrderBy] = React.useState<keyof any>('');\n\n    //The TblContainer component wil be on the top of the Table component\n    const TblContainer = (props: { children: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined; }) => (\n        <Table className={classes.table}>\n\n            {props.children}\n        </Table>)\n\n    // The component TblHead is responsable for the creating of the head of the table\n    const TblHead = () => {\n\n        // handling sorting at single column level.\n        // By click on the same column reverse the sort order\n        const handleSortRequest = (cellId: number) => {\n            let isAsc: boolean;\n            isAsc = orderBy === cellId && order === \"asc\"\n            setOrder(isAsc ? 'desc' : 'asc');\n            setOrderBy(cellId)\n        }\n\n        return (<TableHead>\n            <TableRow>\n                {\n                    headCells.map(headCell => (\n                        <TableCell key={headCell.id}>\n                            <TableSortLabel\n                                active={orderBy === headCell.id}\n                                direction={orderBy === headCell.id ? order : 'asc'}\n                                onClick={() => {\n                                    handleSortRequest(headCell.id)\n                                }}>\n                                {headCell.label}\n                            </TableSortLabel>\n                        </TableCell>))\n                }\n            </TableRow>\n        </TableHead>)\n    }\n\n\n    function TblPagination() {\n\n        const handleChangePage = (\n            event: React.ChangeEvent<unknown> | null,\n            newPage: number) => {\n            setPage(newPage);\n        };\n\n        const handleChangeRowsPerPage = (\n            event: React.ChangeEvent<HTMLSelectElement | HTMLTextAreaElement>\n        ) => {\n            setRowsPerPage(parseInt(event.target.value, 10));\n            setPage(1);\n        };\n\n\n        return (<div className={classes.paginationContainer}>\n\n                <div className={classes.paginationText}>\n                    Rows Per Page:\n                </div>\n                <select onChange={handleChangeRowsPerPage} value={rowsPerPage} className={classes.paginationSelect}>\n                    {pages.map((size) => (\n                        <option key={size} value={size}>\n                            {size}\n                        </option>\n                    ))}\n                </select>\n                <Pagination\n                    className={classes.paginationSection}\n                    count={Math.ceil(filterFn.fn(records).length / rowsPerPage)}\n                    page={page}\n                    siblingCount={0}\n                    boundaryCount={1}\n                    onChange={handleChangePage}\n                    showFirstButton={true}\n                    showLastButton={true}\n                />\n            </div>\n        );\n    }\n\n    function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n        // console.warn(a, b, orderBy)\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n\n    function getComparator<Key extends keyof any>(\n        order: Order,\n        orderBy: Key,\n    ): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n\n    // This method is created for cross-browser compatibility, if you don't\n    // need to support IE11, you can use Array.prototype.sort() directly\n    function stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n        const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        // console.warn(stabilizedThis);\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n\n    const recordsAfterPagingAndSorting = () => {\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\n            .slice((page - 1) * rowsPerPage, page * rowsPerPage)\n    }\n\n    const resetPage = () => {\n        if (page !== 1) return setPage(1)\n    }\n\n    return {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting,\n        resetPage,\n    }\n}","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport {IconButton} from \"@mui/material\";\nimport AccountCircleOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\nimport {createTheme, responsiveFontSizes, ThemeProvider,} from \"@mui/material/styles\";\nimport {TicketInterface} from \"../../domainObjects/Ticket\";\n\nfunction TicketHeader(props: {\n    ticket: TicketInterface | undefined;\n    onClose: Function;\n    onEdit: Function;\n}) {\n    const ticket = props.ticket;\n    let responsiveFontTheme = responsiveFontSizes(createTheme());\n\n    if (ticket) {\n        return (\n            <React.Fragment>\n                <Grid item xs={3} sm={6} md={10}>\n                    <ThemeProvider theme={responsiveFontTheme}>\n                        <Typography variant=\"h4\" gutterBottom noWrap={true}>\n                            {\"#\" + ticket.id + \" \" + ticket.title}\n                        </Typography>\n                    </ThemeProvider>\n                </Grid>\n                <Grid\n                    item\n                    xs={\"auto\"}\n                    sm={\"auto\"}\n                    md={\"auto\"}\n                    container\n                    display={\"inline\"}\n                    alignContent={\"center\"}\n                >\n                    <Grid item display={\"inline\"} justifyContent={\"space-between\"}>\n                        <IconButton\n                            onClick={() => {\n                                props.onEdit();\n                            }}\n                        >\n                            <EditOutlinedIcon fontSize={\"large\"}/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item display={\"inline\"} paddingLeft={{xs: 1, sm: 2, md: 2}}>\n                        <IconButton\n                            onClick={() => {\n                                props.onClose();\n                            }}\n                        >\n                            <CloseIcon fontSize={\"large\"}/>{\" \"}\n                        </IconButton>\n                    </Grid>\n                </Grid>\n\n                <Grid item container spacing={1}>\n                    <Grid item>\n                        <Typography variant=\"body1\" fontSize={\"small\"}>\n                            <strong>Assigned:</strong>\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <AccountCircleOutlinedIcon fontSize={\"small\"}/>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body1\" fontSize={\"small\"}>\n                            {ticket.assignedUserName}\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                <Grid item container>\n                    <Grid item xs={4} sm={4} md={2}>\n                        <Typography variant=\"body1\" fontSize={\"small\"}>\n                            <strong>Created:</strong> {ticket.createdDate?.toDateString()}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body1\" fontSize={\"small\"}>\n                            <strong>Due:</strong> {ticket.dueDate?.toDateString()}\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                <Grid item container>\n                    <Grid item xs={4} sm={2} md={2}>\n                        <Typography variant=\"body1\" fontSize={\"small\"}>\n                            <strong>Status:</strong> {ticket.status}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={4} sm={2} md={2}>\n                        <Typography variant=\"body1\" fontSize={\"small\"}>\n                            <strong>Severity:</strong> Placeholder\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={4} sm={2} md={2}>\n                        <Typography variant=\"body1\" fontSize={\"small\"}>\n                            <strong>Priority:</strong> {ticket.priority}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={4} sm={2} md={2}>\n                        <Typography variant=\"body1\" fontSize={\"small\"}>\n                            <strong>Project:</strong> {ticket.project_name}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        );\n    } else {\n        return <React.Fragment>loading</React.Fragment>;\n    }\n}\n\nexport default TicketHeader;\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport {TicketInterface} from \"../../domainObjects/Ticket\";\n\nfunction TicketBody(props: { ticket: TicketInterface | undefined }) {\n    const ticket = props.ticket;\n\n\n    if (ticket) {\n        return (\n            <Grid item xs={4} sm={8} md={12}>\n\n                <Typography variant=\"body1\">\n                    <strong>Description</strong>\n                </Typography>\n                <Typography variant=\"body1\">\n                    {ticket.description}\n                </Typography>\n\n\n            </Grid>\n        );\n    } else {\n        return <p>loading...</p>;\n    }\n}\n\nexport default TicketBody;\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport TicketHeader from \"./TicketHeader\";\nimport {Divider, Modal} from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport TicketBody from \"./TicketBody\";\nimport {TicketInterface} from \"../../domainObjects/Ticket\";\nimport {SxProps} from \"@mui/system\";\n\nconst boxStyle: SxProps = {\n    position: \"relative\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"85%\",\n    height: \"85%\",\n    bgcolor: \"background.paper\",\n    border: \"1px solid #000\",\n    boxShadow: 24,\n    p: 4,\n    overflow: 'auto'\n};\n\nfunction ViewTicket(props: {\n    ticket: TicketInterface | undefined;\n    modalIsOpen: boolean;\n    onClose: Function;\n    onEdit: Function;\n}) {\n\n    return (\n        <Modal\n            open={props.modalIsOpen}\n            aria-labelledby=\"parent-modal-title\"\n            aria-describedby=\"parent-modal-description\"\n            onBackdropClick={() => {\n                props.onClose();\n            }}\n        >\n            <Box sx={boxStyle}>\n                <Grid\n                    container\n                    spacing={{md: 0}}\n                    columns={{xs: 4, sm: 8, md: 12}}\n                    padding={{md: 0.6}}\n                    justifyContent={\"space-between\"}\n                >\n                    <TicketHeader ticket={props.ticket} onClose={props.onClose} onEdit={props.onEdit}/>\n                    <Divider style={{width: \"100%\", margin: 20}}/>\n                    <TicketBody ticket={props.ticket}/>\n                </Grid>\n            </Box>\n        </Modal>\n    );\n\n}\n\nexport default ViewTicket;\n","import * as React from 'react';\nimport {useEffect, useState} from 'react';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport * as yup from \"yup\";\nimport {useFormik} from \"formik\";\nimport Button from \"@mui/material/Button\";\nimport {MenuItem, Stack} from \"@mui/material\";\nimport Ticket, {TicketInterface} from '../domainObjects/Ticket';\nimport {TransportLayer} from '../transportation/TransportLayer';\nimport {DateTimePicker, LocalizationProvider} from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport Project from \"../domainObjects/Project\";\nimport User from '../domainObjects/User';\nimport {TransportUsers} from '../transportation/TransportUsers';\n\n\nconst validationSchema = yup.object({\n    title: yup\n        .string()\n        .min(10, 'Ticket title should be of minimum 8 characters length')\n        .required('Ticket title is required'),\n    description: yup\n        .string()\n        .required('Ticket description is required')\n});\n\n\nexport default function EditTicketForm(props: {\n    onClose: Function;\n    ticket: TicketInterface | undefined\n}) {\n    const [projects, setProjects] = useState<Project[]>([]);\n    const [users, setUsers] = useState<User[]>([]);\n    const transportLayer = new TransportLayer();\n    const transportUser = new TransportUsers();\n    const ticket = props.ticket;\n    const priorities = [\n        {\n            label: 'LOW',\n            value: 1,\n        },\n        {\n            label: 'MEDIUM',\n            value: 2,\n        },\n        {\n            label: 'HIGH',\n            value: 3,\n        }\n    ];\n\n    const status = [\n        {\n            label: 'Unassigned',\n            value: 1,\n        },\n        {\n            label: 'Open',\n            value: 2,\n        },\n        {\n            label: 'In Progress',\n            value: 3,\n        },\n        {\n            label: 'Resolved',\n            value: 4,\n        },\n        {\n            label: 'Done',\n            value: 5,\n        },\n        {\n            label: 'Re-opened',\n            value: 6,\n        }\n    ];\n\n    function getAllProjects() {\n        transportLayer.getAllProjectPromise().then((response: any) => {\n            const allProjects: Project[] = response.data.map(\n                (responseElement: any) => new Project(responseElement)\n            );\n            setProjects(allProjects);\n        })\n    }\n\n    function getAllUsers() {\n        transportUser\n            .getAllUsersPromise()\n            .then((response: any) => {\n                const allUsers: User[] = response.data.map(\n                    (responseElement: any) => new User(responseElement)\n                );\n                setUsers(allUsers);\n            })\n    }\n\n    useEffect(() => {\n        getAllProjects();\n    }, []);\n\n    useEffect(() => {\n        getAllUsers();\n    }, []);\n\n    const formik = useFormik({\n        initialValues: {\n            title: ticket?.title,\n            description: ticket?.description,\n            dueDate: ticket?.dueDate,\n            createdDate: ticket?.createdDate,\n            updatedDate: ticket?.updatedDate,\n            status: ticket?.status,\n            assignedUserId: ticket?.assignedUserId,\n            priority: ticket?.priority,\n            project: ticket ? ticket.project : \"\",\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            const updateTicket = new Ticket({\n                'id': ticket?.id,\n                'title': values.title,\n                'description': values.description,\n                'due_date': values.dueDate && new Date(values.dueDate),\n                'created_at': ticket?.createdDate,\n                'updated_at': ticket?.updatedDate,\n                'status': values.status,\n                'priority': values.priority,\n                'project': values.project,\n                'assigned_user': values.assignedUserId\n            });\n\n            transportLayer.updateTicketPromise(updateTicket)\n                .then(res => {\n                    props.onClose();\n                }).catch(err => {\n                // TODO: Show error\n            });\n        },\n    });\n\n    return (\n        <React.Fragment>\n\n            <form onSubmit={formik.handleSubmit}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            required\n                            id=\"title\"\n                            name=\"title\"\n                            label=\"Title\"\n                            fullWidth\n                            variant=\"standard\"\n                            value={formik.values.title}\n                            onChange={formik.handleChange}\n                            error={formik.touched.title && Boolean(formik.errors.title)}\n                            helperText={formik.touched.title && formik.errors.title}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            select\n                            required\n                            id=\"project\"\n                            name=\"project\"\n                            label=\"Project\"\n                            fullWidth\n                            variant=\"standard\"\n                            value={formik.values.project}\n                            onChange={event => formik.setFieldValue(\"project\", (event.target.value))}\n                            onBlur={formik.handleBlur}\n                        >\n                            {projects.map((option) => (\n                                <MenuItem key={option.id} value={option.id}>\n                                    {option.name}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            select\n                            required\n                            id=\"status\"\n                            name=\"status\"\n                            label=\"Status\"\n                            fullWidth\n                            variant=\"standard\"\n                            value={formik.values.status}\n                            onChange={event => formik.setFieldValue(\"status\", (event.target.value))}\n                            onBlur={formik.handleBlur}\n                        >\n                            {status.map((option) => (\n                                <MenuItem key={option.value} value={option.label}>\n                                    {option.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            required\n                            id=\"category\"\n                            name=\"category\"\n                            label=\"Category\"\n                            fullWidth\n                            variant=\"standard\"\n                            disabled\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={3}>\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DateTimePicker\n                                label=\"Due Date\"\n                                value={formik.values.dueDate}\n                                inputFormat=\"dd-MM-yyyy HH:mm\"\n                                onChange={value => formik.setFieldValue(\"dueDate\", value)}\n                                minDate={formik.initialValues.createdDate}\n                                renderInput={(params) => <TextField\n                                    id=\"due_date\"\n                                    name=\"due_date\"\n                                    label=\"Due Date\"\n                                    fullWidth\n                                    variant=\"standard\"\n                                    {...params}\n                                />}\n                            />\n                        </LocalizationProvider>\n                    </Grid>\n                    <Grid item xs={12} sm={1}>\n                        <TextField\n                            select\n                            required\n                            id=\"priority\"\n                            name=\"priority\"\n                            label=\"Priority\"\n                            fullWidth\n                            variant=\"standard\"\n                            value={formik.values.priority}\n                            onChange={event => formik.setFieldValue(\"priority\", (event.target.value))}\n                            onBlur={formik.handleBlur}\n                        >\n                            {priorities.map((option) => (\n                                <MenuItem key={option.label} value={option.value}>\n                                    {option.value}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            select\n                            required\n                            id=\"assigned\"\n                            name=\"assigned\"\n                            label=\"Assigned\"\n                            fullWidth\n                            variant=\"standard\"\n                            value={formik.values.assignedUserId}\n                            onChange={event => formik.setFieldValue(\"assignedUserId\", (event.target.value))}\n                            onBlur={formik.handleBlur}\n                        >\n                            {users.map((user) => (\n                                <MenuItem key={user.id} value={user.id}>\n                                    {user.username}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                        <TextField\n                            required\n                            id=\"description\"\n                            name=\"description\"\n                            label=\"Description\"\n                            fullWidth\n                            variant=\"standard\"\n                            multiline\n                            rows={8}\n                            value={formik.values.description}\n                            onChange={formik.handleChange}\n                            error={formik.touched.description && Boolean(formik.errors.description)}\n                            helperText={formik.touched.description && formik.errors.description}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Stack spacing={2} direction=\"row\">\n                            <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n                                Submit\n                            </Button>\n                            <Button color=\"primary\" variant=\"outlined\" onClick={() => props.onClose()}>\n                                Cancel\n                            </Button>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </form>\n\n        </React.Fragment>\n    );\n}","import {Box, Grid, Modal, Typography} from \"@mui/material\";\nimport EditTicketForm from \"../components/EditTicketForm\";\nimport {SxProps} from \"@mui/system\";\nimport {TicketInterface} from '../domainObjects/Ticket';\n\nexport default function EditTicket(props: {\n    onClose: Function;\n    ticket: TicketInterface | undefined;\n}) {\n\n    const boxStyle: SxProps = {\n        position: \"relative\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"85%\",\n        height: \"85%\",\n        bgcolor: \"background.paper\",\n        border: \"1px solid #000\",\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <div>\n            <Modal open={true}>\n                <Box sx={boxStyle}>\n                    <Grid\n                        container\n                        spacing={{md: 0}}\n                        columns={{xs: 4, sm: 8, md: 12}}\n                        padding={{md: 0.6}}\n                        justifyContent={\"space-between\"}\n                    >\n                        {props.ticket !== undefined ? (\n                            <Typography variant=\"h4\">Edit Ticket Number {\"#\" + props.ticket.id} </Typography>\n                        ) : (\"\")}\n                        <EditTicketForm onClose={props.onClose} ticket={props.ticket}/>\n                    </Grid>\n                </Box>\n            </Modal>\n        </div>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {TableBody, TableCell, TableRow, Typography, CircularProgress} from \"@mui/material\";\nimport useTable from \"../components/UseTable\";\nimport {TransportLayer} from \"../transportation/TransportLayer\";\nimport Ticket, {TicketInterface} from \"../domainObjects/Ticket\";\nimport {AxiosResponse} from \"axios\";\nimport moment from \"moment\";\nimport ViewTicket from \"../components/viewTicket/ViewTicket\";\nimport EditTicket from \"./EditTicket\";\n\n// Table header information, id is the name of the\n// property to sort by when the header is clicked\nconst headCells = [\n    {id: \"id\", label: \" Number\"},\n    {id: \"title\", label: \"Title\"},\n    {id: \"description\", label: \"Description\"},\n    {id: \"project_name\", label: \"Project\"},\n    {id: \"dueDate\", label: \"Due\"},\n    {id: \"createDate\", label: \"Created\"},\n    {id: \"updateDate\", label: \"Updated\"},\n    {id: \"status\", label: \"Status\"},\n];\nconst maxCaracteresToDisplay = 200;\nconst transportLayer = new TransportLayer();\n\nexport default function Tickets(props: any) {\n    const [tickets, setTickets] = useState<Ticket[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [filterFn, setFilterFn] = useState({\n        fn: (items: any) => {\n            return tickets;\n        },\n    });\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting,\n        resetPage\n    } = useTable(tickets, headCells, filterFn);\n    const [, setSearchText] = useState(\"\");\n\n    const [ticketToUpdate, setTicketToUpdate] = useState<TicketInterface>();\n\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalEditTicketOpen, setModalEditTicketOpen] = useState(false);\n\n    function fetchAllTicket() {\n        transportLayer\n            .getAllTicketsPromise()\n            .then((response: any) => {\n                const allTickets: Ticket[] = response.data.map(\n                    (responseElement: any) => new Ticket(responseElement)\n                );\n                setTickets(allTickets);\n                setFilterFn({\n                    fn: (allTickets) => {\n                        return allTickets;\n                    },\n                });\n                setLoading(false)\n            })\n            .catch((response: AxiosResponse) => {\n                // Handle error\n                setLoading(false)\n            });\n    }\n\n    const handleSearch = (text: any): void => {\n        resetPage();\n        setSearchText(text);\n        setFilterFn({\n            fn: (items) => {\n                if (text === \"\") return items;\n                else\n                    return items.filter((x: {\n                            title: string,\n                            description: string,\n                            dueDate: Date,\n                            createdDate: Date,\n                            updatedDate: Date\n                        }) =>\n                            x.title.toLowerCase().includes(text)\n                            || x.description.toLowerCase().includes(text)\n                            || moment(x.dueDate).format(\"DD-MM-YYYY\").includes(text)\n                            || moment(x.createdDate).format(\"DD-MM-YYYY\").includes(text)\n                            || moment(x.updatedDate).format(\"DD-MM-YYYY\").includes(text)\n                    );\n            },\n        });\n    };\n\n    function handleClickEvent(ticketId: number | string) {\n        const id = ticketId as number;\n\n        transportLayer\n            .getTicketByIdPromise(id as number)\n            .then((response: AxiosResponse) => {\n                const ticket: Ticket = new Ticket(response.data);\n                setTicketToUpdate(ticket);\n\n                // Open modal\n                setModalOpen(true);\n            })\n            .catch((response: AxiosResponse) => {\n                // Handle error.\n                console.log(response);\n            });\n    }\n\n    function onModalClose() {\n        fetchAllTicket();\n        setModalOpen(false);\n    }\n\n    function displayCountCaracteres(text: string, count: number) {\n        return (text.length > count) ? text.substring(0, count) : text\n    }\n\n    function onEditTicket() {\n        setModalOpen(false);\n        setModalEditTicketOpen(true);\n    }\n\n    function onModalEditTicketClose() {\n        fetchAllTicket();\n        setModalEditTicketOpen(false);\n    }\n\n    useEffect(fetchAllTicket, []);\n\n    useEffect(() => {\n        handleSearch(props.searchTextInput);\n    }, [props]);\n\n\n    return (\n        <React.Fragment>\n            {modalOpen ? (\n                <ViewTicket\n                    ticket={ticketToUpdate}\n                    modalIsOpen={modalOpen}\n                    onClose={onModalClose}\n                    onEdit={onEditTicket}\n                />\n            ) : (\"\")}\n            {modalEditTicketOpen ? (\n                <EditTicket\n                    onClose={onModalEditTicketClose}\n                    ticket={ticketToUpdate}\n                />\n            ) : (\"\")}\n            <Typography variant=\"h1\">Tickets</Typography>\n            <TblContainer>\n                <TblHead/>\n                <TableBody>\n                    { tickets.length > 0 ? (\n                        recordsAfterPagingAndSorting().map((item) => (\n                        <TableRow key={item.id} onClick={() => handleClickEvent(item.id)}>\n                            <TableCell>{item.id} </TableCell>\n                            <TableCell>{item.title} </TableCell>\n                            <TableCell>\n                                {displayCountCaracteres(item.description as string, maxCaracteresToDisplay)}\n                            </TableCell>\n                            <TableCell>{item.project_name} </TableCell>\n                            <TableCell>\n                                {moment((item.dueDate), (\"DD-MM-YYYY\")).isValid() ? moment(item.dueDate).format(\"DD-MM-YYYY\") : \" \"}\n                            </TableCell>\n                            <TableCell>\n                                {moment((item.createdDate), (\"DD-MM-YYYY\")).isValid() ? moment(item.createdDate).format(\"DD-MM-YYYY\") : \" \"}\n                            </TableCell>\n                            <TableCell>\n                                {moment((item.updatedDate), (\"DD-MM-YYYY\")).isValid() ? moment(item.updatedDate).format(\"DD-MM-YYYY\") : \" \"}\n                            </TableCell>\n                            <TableCell>{item.status} </TableCell>\n                        </TableRow>))\n                    ) : (\n                        <TableRow>\n                            <TableCell colSpan={100}>\n                            {loading ? (\n                                <CircularProgress/>\n                            ) : (\n                                \"No data found\"\n                            )}\n                            </TableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </TblContainer>\n            <TblPagination/>\n        </React.Fragment>\n    );\n}\nexport {};\n","export interface RoleInterface {\n    url: string;\n    name: string;\n}\n\nexport default class Role implements RoleInterface {\n    url: string;\n    name: string;\n\n    constructor(json: any) {\n        this.url = json.url;\n        this.name = json.name;\n    }\n\n    toJSON() {\n        return {\n            url: this.url,\n            name: this.name\n        }\n    }\n}","import axios from \"axios\";\nimport inMemoryJWT from \"../domainObjects/inMemoryJWTManager\";\n\n\nexport class TransportLayerRoles {\n    apiUrl = process.env.REACT_APP_REST_API;\n    axiosInstance = axios.create({\n        baseURL: this.apiUrl,\n    });\n\n    getAllRolesPromise() {\n        return this.axiosInstance.request({\n            method: \"GET\",\n            url: \"/roles\",\n            headers: {\n                Authorization: `JWT ${inMemoryJWT.getToken()}`\n            },\n        });\n    }\n}\n    \n\n\n    ","import * as React from 'react';\nimport {useEffect, useState} from 'react';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport {useFormik} from \"formik\";\nimport Button from \"@mui/material/Button\";\nimport {Box, Chip, MenuItem, Select, Stack, InputLabel} from \"@mui/material\";\nimport User, {UserInterface} from '../domainObjects/User';\nimport {TransportUsers} from '../transportation/TransportUsers';\nimport Role from '../domainObjects/Role';\nimport {TransportLayerRoles} from '../transportation/TransportLayerRoles';\n\n\nexport default function EditUserForm(props: {\n    onClose: Function;\n    user: UserInterface | undefined\n}) {\n    const transportLayer = new TransportUsers();\n    const user = props.user;\n    const [roles, setRoles] = useState<Role[]>([]);\n    const transportRole = new TransportLayerRoles();\n    const formik = useFormik({\n        initialValues: {\n            username: user?.username,\n            email: user?.email,\n            groups: user?.groups,\n            last_login: user?.last_login,\n            date_joined: user?.date_joined,\n        },\n        onSubmit: (values) => {\n            const updateUser = new User({\n                'id': user?.id,\n                'username': values.username,\n                'email': values.email,\n                'groups': values.groups,\n                'last_login': user?.last_login,\n                'date_joined': user?.date_joined,\n            });\n            transportLayer.updateUserPromise(updateUser)\n                .then(res => {\n                    props.onClose();\n                }).catch(err => {\n                // TODO: Show error\n            });\n        },\n    });\n\n    function getAllRoles() {\n        transportRole\n            .getAllRolesPromise()\n            .then((response: any) => {\n                const allRoles: Role[] = response.data.map(\n                    (responseElement: any) => new Role(responseElement)\n                );\n                setRoles(allRoles);\n            })\n    }\n\n    useEffect(() => {\n        getAllRoles();\n    }, []);\n\n\n    return (\n        <React.Fragment>\n\n            <form style={{width: \"100%\"}} onSubmit={formik.handleSubmit}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            required\n                            id=\"username\"\n                            name=\"username\"\n                            label=\"Username\"\n                            fullWidth\n                            variant=\"standard\"\n                            value={formik.values.username}\n                            onChange={formik.handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            required\n                            id=\"email\"\n                            name=\"email\"\n                            label=\"Email\"\n                            fullWidth\n                            variant=\"standard\"\n                            value={formik.values.email}\n                            onChange={formik.handleChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        <InputLabel style={{fontSize: \"0.75rem\"}} id=\"roles-label\">Roles</InputLabel>\n                        <Select\n                            labelId=\"roles-label\"\n                            id=\"groups\"\n                            name=\"groups\"\n                            label=\"Roles\"\n                            fullWidth\n                            multiple\n                            variant=\"standard\"\n                            value={(formik.values.groups)}\n                            onChange={formik.handleChange}\n                            renderValue={(selected) => {\n                                return (\n                                    <Box sx={{display: 'flex', flexWrap: 'wrap', gap: 0.5}}>\n                                        {selected.map((value) => {\n                                            const option = roles.find((o) => o.url === value);\n                                            return <Chip key={value} label={option?.name}/>;\n                                        })}\n                                    </Box>\n                                );\n                            }}\n                        >\n                            {roles.map((role) => (\n                                <MenuItem\n                                    key={role.url}\n                                    value={role.url}\n                                >\n                                    {role.name}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Stack spacing={2} direction=\"row\">\n                            <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n                                Submit\n                            </Button>\n                            <Button color=\"primary\" variant=\"outlined\" onClick={() => props.onClose()}>\n                                Cancel\n                            </Button>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </form>\n\n        </React.Fragment>\n    );\n}","import * as React from 'react';\nimport {Box, Grid, Modal, Typography} from \"@mui/material\";\nimport EditUserForm from \"../components/EditUserForm\";\nimport {SxProps} from \"@mui/system\";\nimport {UserInterface} from \"../domainObjects/User\";\n\nexport default function EditUser(props: {\n    onClose: Function;\n    user: UserInterface | undefined;\n}) {\n\n    const boxStyle: SxProps = {\n        position: \"relative\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"85%\",\n        height: \"85%\",\n        bgcolor: \"background.paper\",\n        border: \"1px solid #000\",\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <div>\n            <Modal open={true}>\n                <Box sx={boxStyle}>\n                    <Grid\n                        container\n                        spacing={{md: 0}}\n                        columns={{xs: 4, sm: 8, md: 12}}\n                        padding={{md: 0.6}}\n                        justifyContent={\"space-between\"}\n                    >\n                        <Typography variant=\"h4\">Edit User</Typography>\n                        <EditUserForm onClose={props.onClose} user={props.user}/>\n                    </Grid>\n                </Box>\n            </Modal>\n\n        </div>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {Box, Chip, CircularProgress, TableBody, TableCell, TableRow, Typography} from '@mui/material';\nimport useTable from \"../components/UseTable\";\nimport {TransportUsers} from \"../transportation/TransportUsers\";\nimport User, {UserInterface} from \"../domainObjects/User\";\nimport {AxiosResponse} from \"axios\";\nimport moment from \"moment\";\nimport EditUser from \"./EditUser\";\nimport {TransportLayerRoles} from \"../transportation/TransportLayerRoles\";\nimport Role from \"../domainObjects/Role\";\n\nconst transportLayer = new TransportUsers();\nconst transportRole = new TransportLayerRoles();\n// Header information of the table, key is the name of the \n// property to sort by when the header is clicked \nconst headCells = [\n    {id: 'username', label: 'Name'},\n    {id: 'email', label: 'Email'},\n    {id: 'groups', label: 'Roles'},\n    {id: 'last_login', label: 'Last Login'},\n    {id: 'date_joined', label: 'Created'}\n]\n\nexport default function Users(props: any) {\n    const [modalEditUserOpen, setModalEditUserOpen] = useState(false);\n\n    const [users, setUsers] = useState<User[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [filterFn, setFilterFn] = useState({\n        fn: (items: any) => {\n            return users;\n        }\n    })\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting,\n        resetPage\n    } = useTable(users, headCells, filterFn);\n    const [, setSearchText] = React.useState('');\n    const [userToUpdate, setUserToUpdate] = useState<UserInterface>();\n    const [roles, setRoles] = useState<Role[]>([]);\n\n    function fetchAllUsers() {\n        transportLayer\n            .getAllUsersPromise()\n            .then((response: any) => {\n                const allUsers: User[] = response.data.map(\n                    (responseElement: any) => new User(responseElement)\n                );\n                setUsers(allUsers);\n                setFilterFn({\n                    fn: (allUsers) => {\n                        return allUsers;\n                    },\n                });\n                setLoading(false)\n            })\n            .catch((response: AxiosResponse) => {\n                // Handle error\n                setLoading(false)\n            });\n    }\n\n    function getAllRoles() {\n        transportRole\n            .getAllRolesPromise()\n            .then((response: any) => {\n                const allRoles: Role[] = response.data.map(\n                    (responseElement: any) => new Role(responseElement)\n                );\n                setRoles(allRoles);\n            })\n    }\n\n    const handleSearch = (text: any): void => {\n        resetPage();\n        setSearchText(text)\n        setFilterFn({\n            fn: items => {\n                if (text === \"\") return items;\n                else return items.filter((x: { username: string; }) => x.username.toLowerCase().includes(text))\n            }\n        })\n        setSearchText(\"\");\n    };\n\n    function onModalEditUserClose() {\n        fetchAllUsers()\n        setModalEditUserOpen(false);\n    }\n\n    function handleClickEvent(userId: number | string) {\n        const id = userId as number;\n\n        // Get user\n        new TransportUsers()\n            .getUserByIdPromise(id as number)\n            .then((response: AxiosResponse) => {\n                const user: User = new User(response.data);\n                setUserToUpdate(user);\n\n                // Open modal\n                setModalEditUserOpen(true);\n            })\n            .catch((response: AxiosResponse) => {\n                // Handle error.\n                console.log(response);\n            });\n    }\n\n    useEffect(fetchAllUsers, []);\n\n    useEffect(() => {\n        handleSearch(props.searchTextInput);\n    }, [props]);\n\n    useEffect(getAllRoles, []);\n\n\n    return (\n        <React.Fragment>\n            {modalEditUserOpen ? (\n                <EditUser\n                    onClose={onModalEditUserClose}\n                    user={userToUpdate}\n                />\n            ) : (\"\")}\n            <Typography variant=\"h1\">Users</Typography>\n            <TblContainer>\n                <TblHead/>\n                <TableBody>\n                    { users.length > 0 ? (\n                        recordsAfterPagingAndSorting().map(item =>\n                            (<TableRow key={item.id} onClick={() => handleClickEvent(item.id)}>\n                                <TableCell>{item.username} </TableCell>\n                                <TableCell>{item.email} </TableCell>\n                                <TableCell>{\n                                    <Box sx={{display: 'flex', flexWrap: 'wrap', gap: 0.5}}>\n                                        {\n                                            item.groups.toString().split(\",\").map((value) => {\n                                                const option = roles.find((o) => o.url === value);\n                                                return typeof option !== 'undefined' &&\n                                                    <Chip key={option?.url} label={option?.name}/>\n                                            })}\n                                    </Box>\n                                }\n                                </TableCell>\n                                <TableCell>{moment(item.last_login).format('DD-MM-YYYY HH:mm')} </TableCell>\n                                <TableCell>{moment(item.date_joined).format('DD-MM-YYYY HH:mm')} </TableCell>\n                            </TableRow>))\n                    ) : (\n                        <TableRow>\n                            <TableCell colSpan={100}>\n                                {loading ? (\n                                    <CircularProgress/>\n                                ) : (\n                                    \"No data found\"\n                                )}\n                            </TableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </TblContainer>\n            <TblPagination/>\n        </React.Fragment>\n    )\n\n}\nexport {}\n\n","import * as React from 'react';\nimport {Grid, Typography} from \"@mui/material\";\n\nexport default function Settings() {\n    return (\n        <React.Fragment>\n            <Typography variant=\"h1\" gutterBottom>Settings</Typography>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <Typography variant=\"body1\">\n                        Lorem ipsum dolor sit amet, consectetur adipiscing\n                        elit. Integer consequat velit sem, ultrices cursus augue lacinia a. Quisque consequat ac neque\n                        ut convallis. Sed velit arcu, vestibulum ut lacus vel, fermentum faucibus augue. Vivamus justo\n                        felis, consectetur eu accumsan a, faucibus at diam.\n                    </Typography>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}","import * as React from 'react';\n\nimport {Visibility, VisibilityOff} from '@mui/icons-material';\nimport {Button, FormControl, Grid, IconButton, Input, InputAdornment, InputLabel, Typography} from '@mui/material';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport {useFormik} from \"formik\";\n\ninterface State {\n    showPassword: boolean;\n    username: string;\n    password: string;\n}\n\nexport default function Login(props: { handle_login: (arg0: State) => void; }) {\n    const [values, setValues] = React.useState<State>({\n        showPassword: false,\n        username: '',\n        password: '',\n    });\n\n    // Toggle password visibility\n    const handleClickShowPassword = () => {\n        setValues({\n            ...values,\n            showPassword: !values.showPassword,\n        });\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            password: '',\n        },\n        onSubmit: (values) => {\n            const loginUser = {\n                'showPassword': false,\n                'username': values.username,\n                'password': values.password,\n            }\n            props.handle_login(loginUser)\n        },\n    });\n\n    return (\n        <React.Fragment>\n\n            <form onSubmit={formik.handleSubmit}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h1\">Login</Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl variant=\"standard\" fullWidth>\n                            <InputLabel htmlFor=\"username\">Username</InputLabel>\n                            <Input\n                                required\n                                id=\"username\"\n                                value={formik.values.username}\n                                onChange={formik.handleChange}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl variant=\"standard\" fullWidth>\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\n                            <Input\n                                required\n                                id=\"password\"\n                                type={values.showPassword ? 'text' : 'password'}\n                                value={formik.values.password}\n                                onChange={formik.handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton onClick={handleClickShowPassword}>\n                                            {values.showPassword ? <VisibilityOff/> : <Visibility/>}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={3}>\n                        <Button variant=\"outlined\" type=\"submit\" fullWidth>Login</Button>\n                    </Grid>\n\n                    <Grid item xs={12} sm={9}>\n                        <Button component={Link} to=\"/register\">Don't have an account yet?</Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </React.Fragment>\n    )\n}\n\n// Add prop types\nLogin.propTypes = {\n    handle_login: PropTypes.func.isRequired\n};","import * as React from 'react';\n\nimport {Visibility, VisibilityOff} from '@mui/icons-material';\nimport {Button, FormControl, Grid, IconButton, Input, InputAdornment, InputLabel, Typography} from '@mui/material';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport {useFormik} from \"formik\";\n\ninterface State {\n    showPassword: boolean;\n    username: string;\n    email: string;\n    password: string;\n}\n\nexport default function Register(props: { handle_register: (arg0: State) => void; }) {\n    const [values, setValues] = React.useState<State>({\n        showPassword: false,\n        username: '',\n        email: '',\n        password: '',\n    });\n\n    // Toggle password visibility\n    const handleClickShowPassword = () => {\n        setValues({\n            ...values,\n            showPassword: !values.showPassword,\n        });\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            email: '',\n            password: '',\n        },\n        onSubmit: (values) => {\n            const registerUser = {\n                'showPassword': false,\n                'username': values.username,\n                'email': values.email,\n                'password': values.password,\n            }\n            props.handle_register(registerUser)\n        },\n    });\n\n    return (\n        <React.Fragment>\n\n            <form onSubmit={formik.handleSubmit}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h1\">Register</Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl variant=\"standard\" fullWidth>\n                            <InputLabel htmlFor=\"username\">Username</InputLabel>\n                            <Input\n                                required\n                                id=\"username\"\n                                value={formik.values.username}\n                                onChange={formik.handleChange}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl variant=\"standard\" fullWidth>\n                            <InputLabel htmlFor=\"email\">Email</InputLabel>\n                            <Input\n                                required\n                                id=\"email\"\n                                type=\"email\"\n                                value={formik.values.email}\n                                onChange={formik.handleChange}\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <FormControl variant=\"standard\" fullWidth>\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\n                            <Input\n                                required\n                                id=\"password\"\n                                inputProps={{minLength: 8}}\n                                type={values.showPassword ? 'text' : 'password'}\n                                value={formik.values.password}\n                                onChange={formik.handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton onClick={handleClickShowPassword}>\n                                            {values.showPassword ? <VisibilityOff/> : <Visibility/>}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={3}>\n                        <Button variant=\"outlined\" type=\"submit\" fullWidth>Register</Button>\n                    </Grid>\n\n                    <Grid item xs={12} sm={9}>\n                        <Button component={Link} to=\"/\">Already have an account?</Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </React.Fragment>\n    )\n}\n\n// Add prop types\nRegister.propTypes = {\n    handle_register: PropTypes.func.isRequired\n};","import * as React from 'react';\nimport {Redirect, Route, RouteProps,} from 'react-router-dom';\nimport PropTypes from \"prop-types\";\n\nPrivateRoute.propTypes = {\n    component: PropTypes.any,\n    isLoggedIn: PropTypes.bool,\n};\n\ninterface PrivateRouteProps extends RouteProps {\n    component: any;\n    isLoggedIn: boolean;\n}\n\nexport default function PrivateRoute(props: PrivateRouteProps) {\n    const {component, isLoggedIn, ...rest} = props;\n\n    return (\n        <Route\n            {...rest}\n            render={(routeProps) =>\n                isLoggedIn ? (\n                    component\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/',\n                            state: {from: routeProps.location}\n                        }}\n                    />\n                )\n            }\n        />\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {CircularProgress, TableBody, TableCell, TableRow, Typography} from '@mui/material';\nimport useTable from \"../components/UseTable\";\nimport {AxiosResponse} from \"axios\";\nimport {TransportLayer} from \"../transportation/TransportLayer\";\nimport Project from \"../domainObjects/Project\";\nimport Button from \"@mui/material/Button\";\nimport ProjectForm from \"../components/ProjectForm\";\n\nconst transportLayer = new TransportLayer();\n// Header information of the table, key is the name of the\n// property to sort by when the header is clicked\nconst headCells = [\n    {id: 'id', label: 'Id'},\n    {id: 'name', label: 'Name'},\n    {id: 'delete', label: 'Delete?'},\n]\n\nexport default function Projects(props: any) {\n    const [modalIsOpen, setModalIsOpen] = React.useState(false);\n\n    const [projects, setProjects] = useState<Project[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [filterFn, setFilterFn] = useState({\n        fn: (items: any) => {\n            return projects;\n        }\n    })\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting,\n        resetPage\n    } = useTable(projects, headCells, filterFn);\n    const [, setSearchText] = React.useState('');\n    const [editProject, setEditProject] = useState<Project | null>(null);\n\n    function fetchAllProjects() {\n        transportLayer\n            .getAllProjectPromise()\n            .then((response: any) => {\n                const allProjects: Project[] = response.data.map(\n                    (responseElement: any) => new Project(responseElement)\n                );\n                setProjects(allProjects);\n                setFilterFn({\n                    fn: (allProjects) => {\n                        return allProjects;\n                    },\n                });\n                setLoading(false)\n            })\n            .catch((response: AxiosResponse) => {\n                // Handle error\n                setLoading(false)\n            });\n    }\n\n    const handleSearch = (text: any): void => {\n        resetPage()\n        setSearchText(text)\n        setFilterFn({\n            fn: items => {\n                if (text === \"\") return items;\n                else return items.filter((x: { name: string; }) => x.name.toLowerCase().includes(text))\n            }\n        })\n        setSearchText(\"\");\n    };\n\n    function onModalClose() {\n        setModalIsOpen(false);\n        fetchAllProjects();\n    }\n\n    function handleDeletePressed(project: Project) {\n        transportLayer.deleteProject(project).then(r => fetchAllProjects())\n    }\n\n    function handleEditPressed(project: Project) {\n        setEditProject(project);\n        setModalIsOpen(true);\n    }\n\n    window.addEventListener('load', () => {\n        fetchAllProjects()\n    });\n\n    useEffect(fetchAllProjects, []);\n\n    useEffect(() => {\n        handleSearch(props.searchTextInput);\n    }, [props]);\n\n    return (\n        <React.Fragment>\n            <ProjectForm modalIsOpen={modalIsOpen} onClose={onModalClose} project={editProject}/>\n            <Typography variant=\"h1\">Projects</Typography>\n            <TblContainer>\n                <TblHead/>\n                <TableBody>\n                    { projects.length > 0 ? (\n                        recordsAfterPagingAndSorting().map(item =>\n                            (<TableRow key={item.id} onClick={(e) => {\n                                const target = e.target as Element;\n                                if(target.getAttribute('type') !== 'button') {\n                                    handleEditPressed(new Project(item))\n                                }\n                            }}>\n                                <TableCell>{item.id} </TableCell>\n                                <TableCell>{item.name} </TableCell>\n                                <TableCell><Button\n                                    onClick={() => {\n                                        if (window.confirm('Are you sure to delete this project?')) {\n                                            handleDeletePressed(new Project(item))\n                                        }\n                                    }}>Delete</Button></TableCell>\n                            </TableRow>))\n                    ) : (\n                        <TableRow>\n                            <TableCell colSpan={100}>\n                                {loading ? (\n                                    <CircularProgress/>\n                                ) : (\n                                    \"No data found\"\n                                )}\n                            </TableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </TblContainer>\n            <TblPagination/>\n        </React.Fragment>\n    )\n\n}\nexport {}\n\n","import \"./App.css\";\nimport SideMenu from \"./components/SideMenu\";\nimport TopHeader from \"./components/TopHeader\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Tickets from \"./pages/Tickets\";\nimport Users from \"./pages/Users\";\nimport Settings from \"./pages/Settings\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\n\nimport {Redirect, Route, Router, Switch} from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\nimport * as React from \"react\";\nimport {Alert} from \"@mui/material\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Projects from \"./pages/Projects\";\nimport inMemoryJWT from \"./domainObjects/inMemoryJWTManager\";\n\nconst history = createBrowserHistory();\nlet refreshInterval: NodeJS.Timeout\n\nfunction App() {\n\n    const [searchText, setSearchText] = React.useState(\"\");\n    const [user, setUser] = React.useState({\n        logged_in: false,\n        username: '',\n    });\n\n    const [message, setMessage] = React.useState({\n        status: '',\n        show_message: false,\n        message: '',\n    });\n\n    // Log user out\n    function handle_logout(): void {\n        inMemoryJWT.deleteToken();\n        setUser({logged_in: false, username: ''});\n        clearInterval(refreshInterval)\n    }\n\n    // Log user in\n    function handle_login(data: any): void {\n        fetch(process.env.REACT_APP_REST_API + 'token-auth/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(json => {\n                if (json.user !== undefined) {\n                    setMessage({status: '', show_message: false, message: ''})\n                    inMemoryJWT.setToken(json.token);\n                    setUser({\n                        logged_in: true,\n                        username: json.user.username\n                    });\n                    // Refresh token\n                    startInterval()\n                } else {\n                    if (json.non_field_errors !== undefined) {\n                        setMessage({status: 'error', show_message: true, message: json.non_field_errors})\n                    } else {\n                        setMessage({\n                            status: 'error',\n                            show_message: true,\n                            message: 'Something went wrong while trying to login!'\n                        })\n                    }\n                }\n            }).catch(err => {\n            setMessage({status: 'error', show_message: true, message: 'Something went wrong while trying to login!'})\n        });\n    }\n\n    // Register user\n    function handle_register(data: any): void {\n        fetch(process.env.REACT_APP_REST_API + 'register/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (!res.ok) throw res\n                else return res.json()\n            })\n            .then(() => {\n                setMessage({\n                    status: 'success',\n                    show_message: true,\n                    message: 'Successfully registered account! Please login'\n                })\n            })\n            .catch(async (error) => {\n                let json = await error.json()\n                let message = 'Something went wrong while trying to register user!'\n                if (json.non_field_errors !== undefined) {\n                    message = json.non_field_errors\n                } else if (json.username !== undefined) {\n                    message = \"Username: \" + json.username\n                } else if (json.email !== undefined) {\n                    message = \"Email: \" + json.email\n                } else if (json.password !== undefined) {\n                    message = \"Password: \" + json.password\n                }\n                setMessage({status: 'error', show_message: true, message: message})\n            });\n    }\n\n    // Refresh token\n    function startInterval(): void {\n        refreshInterval = setInterval(function () {\n            refresh_token()\n        }, 500000);\n    }\n\n    // Refresh JWT token\n    function refresh_token(): void {\n        fetch(process.env.REACT_APP_REST_API + 'token-refresh/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ token: inMemoryJWT.getToken()})\n        })\n            .then(res => res.json())\n            .then(json => {\n                if (json.user !== undefined) {\n                    inMemoryJWT.setToken(json.token);\n                    setUser({\n                        logged_in: true,\n                        username: json.user.username\n                    });\n                } else {\n                    handle_logout()\n                }\n            }).catch(err => {\n            handle_logout()\n        });\n    }\n\n    // Change variables on route change\n    history.listen((location) => {\n        setMessage({status: '', show_message: false, message: ''});\n        setSearchText(\"\");\n    })\n\n    // Start interval on page load\n    window.addEventListener('load', () => {\n        if (user.logged_in) {\n            refresh_token()\n            startInterval()\n        }\n    });\n\n    return (\n        <Router history={history}>\n            <SideMenu/>\n            <TopHeader handle_logout={handle_logout} logged_in={user.logged_in} searchText={searchText}\n                       setSearchText={setSearchText}/>\n\n            <div id=\"content\">\n\n                {message.show_message && message.status === \"error\" ? (\n                    <Alert onClose={() => {\n                        setMessage({status: '', show_message: false, message: ''})\n                    }} className=\"message\" severity=\"error\">{message.message}</Alert>\n                ) : (\"\")}\n\n                {message.show_message && message.status === \"success\" ? (\n                    <Alert onClose={() => {\n                        setMessage({status: '', show_message: false, message: ''})\n                    }} className=\"message\" severity=\"success\">{message.message}</Alert>\n                ) : (\"\")}\n\n                <Switch>\n\n                    <Redirect from='/ticket-tracker' to='/' />\n\n                    {!user.logged_in ? (\n                        <Route exact path=\"/\">\n                            <Login handle_login={handle_login}/>\n                        </Route>\n                    ) : (\n                        \"\"\n                    )}\n                    {!user.logged_in ? (\n                        <Route path=\"/register\">\n                            <Register handle_register={handle_register}/>\n                        </Route>\n                    ) : (\n                        <Route exact path=\"/\">\n                            <Dashboard/>\n                        </Route>\n                    )}\n\n                    <PrivateRoute path=\"/tickets\" component={<Tickets searchTextInput={searchText}/>}\n                                  isLoggedIn={user.logged_in}/>\n                    <PrivateRoute path=\"/users\" component={<Users searchTextInput={searchText}/>}\n                                  isLoggedIn={user.logged_in}/>\n                    <PrivateRoute path=\"/settings\" component={<Settings/>} isLoggedIn={user.logged_in}/>\n                    <PrivateRoute path=\"/projects\" component={<Projects/>} isLoggedIn={user.logged_in}/>\n\n\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}